/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.order.rule.model.impl;

import com.liferay.commerce.order.rule.model.CommerceOrderRuleEntry;
import com.liferay.commerce.order.rule.model.CommerceOrderRuleEntryModel;
import com.liferay.commerce.order.rule.model.CommerceOrderRuleEntrySoap;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the CommerceOrderRuleEntry service. Represents a row in the &quot;CommerceOrderRuleEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>CommerceOrderRuleEntryModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CommerceOrderRuleEntryImpl}.
 * </p>
 *
 * @author Luca Pellizzon
 * @see CommerceOrderRuleEntryImpl
 * @generated
 */
@JSON(strict = true)
public class CommerceOrderRuleEntryModelImpl
	extends BaseModelImpl<CommerceOrderRuleEntry>
	implements CommerceOrderRuleEntryModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a commerce order rule entry model instance should use the <code>CommerceOrderRuleEntry</code> interface instead.
	 */
	public static final String TABLE_NAME = "CommerceOrderRuleEntry";

	public static final Object[][] TABLE_COLUMNS = {
		{"externalReferenceCode", Types.VARCHAR},
		{"commerceOrderRuleEntryId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"active_", Types.BOOLEAN}, {"description", Types.VARCHAR},
		{"displayDate", Types.TIMESTAMP}, {"expirationDate", Types.TIMESTAMP},
		{"name", Types.VARCHAR}, {"priority", Types.INTEGER},
		{"type_", Types.VARCHAR}, {"typeSettings", Types.VARCHAR},
		{"lastPublishDate", Types.TIMESTAMP}, {"status", Types.INTEGER},
		{"statusByUserId", Types.BIGINT}, {"statusByUserName", Types.VARCHAR},
		{"statusDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("externalReferenceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("commerceOrderRuleEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("active_", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("displayDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("expirationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("priority", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("type_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("typeSettings", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastPublishDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table CommerceOrderRuleEntry (externalReferenceCode VARCHAR(75) null,commerceOrderRuleEntryId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,active_ BOOLEAN,description VARCHAR(75) null,displayDate DATE null,expirationDate DATE null,name VARCHAR(75) null,priority INTEGER,type_ VARCHAR(75) null,typeSettings VARCHAR(75) null,lastPublishDate DATE null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null)";

	public static final String TABLE_SQL_DROP =
		"drop table CommerceOrderRuleEntry";

	public static final String ORDER_BY_JPQL =
		" ORDER BY commerceOrderRuleEntry.priority DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY CommerceOrderRuleEntry.priority DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ACTIVE_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long DISPLAYDATE_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EXPIRATIONDATE_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EXTERNALREFERENCECODE_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TYPE_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PRIORITY_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static CommerceOrderRuleEntry toModel(
		CommerceOrderRuleEntrySoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		CommerceOrderRuleEntry model = new CommerceOrderRuleEntryImpl();

		model.setExternalReferenceCode(soapModel.getExternalReferenceCode());
		model.setCommerceOrderRuleEntryId(
			soapModel.getCommerceOrderRuleEntryId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setActive(soapModel.isActive());
		model.setDescription(soapModel.getDescription());
		model.setDisplayDate(soapModel.getDisplayDate());
		model.setExpirationDate(soapModel.getExpirationDate());
		model.setName(soapModel.getName());
		model.setPriority(soapModel.getPriority());
		model.setType(soapModel.getType());
		model.setTypeSettings(soapModel.getTypeSettings());
		model.setLastPublishDate(soapModel.getLastPublishDate());
		model.setStatus(soapModel.getStatus());
		model.setStatusByUserId(soapModel.getStatusByUserId());
		model.setStatusByUserName(soapModel.getStatusByUserName());
		model.setStatusDate(soapModel.getStatusDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<CommerceOrderRuleEntry> toModels(
		CommerceOrderRuleEntrySoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<CommerceOrderRuleEntry> models =
			new ArrayList<CommerceOrderRuleEntry>(soapModels.length);

		for (CommerceOrderRuleEntrySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public CommerceOrderRuleEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _commerceOrderRuleEntryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCommerceOrderRuleEntryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _commerceOrderRuleEntryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CommerceOrderRuleEntry.class;
	}

	@Override
	public String getModelClassName() {
		return CommerceOrderRuleEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<CommerceOrderRuleEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<CommerceOrderRuleEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceOrderRuleEntry, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((CommerceOrderRuleEntry)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<CommerceOrderRuleEntry, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<CommerceOrderRuleEntry, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(CommerceOrderRuleEntry)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<CommerceOrderRuleEntry, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<CommerceOrderRuleEntry, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, CommerceOrderRuleEntry>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			CommerceOrderRuleEntry.class.getClassLoader(),
			CommerceOrderRuleEntry.class, ModelWrapper.class);

		try {
			Constructor<CommerceOrderRuleEntry> constructor =
				(Constructor<CommerceOrderRuleEntry>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<CommerceOrderRuleEntry, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<CommerceOrderRuleEntry, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<CommerceOrderRuleEntry, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<CommerceOrderRuleEntry, Object>>();
		Map<String, BiConsumer<CommerceOrderRuleEntry, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<CommerceOrderRuleEntry, ?>>();

		attributeGetterFunctions.put(
			"externalReferenceCode",
			CommerceOrderRuleEntry::getExternalReferenceCode);
		attributeSetterBiConsumers.put(
			"externalReferenceCode",
			(BiConsumer<CommerceOrderRuleEntry, String>)
				CommerceOrderRuleEntry::setExternalReferenceCode);
		attributeGetterFunctions.put(
			"commerceOrderRuleEntryId",
			CommerceOrderRuleEntry::getCommerceOrderRuleEntryId);
		attributeSetterBiConsumers.put(
			"commerceOrderRuleEntryId",
			(BiConsumer<CommerceOrderRuleEntry, Long>)
				CommerceOrderRuleEntry::setCommerceOrderRuleEntryId);
		attributeGetterFunctions.put(
			"companyId", CommerceOrderRuleEntry::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<CommerceOrderRuleEntry, Long>)
				CommerceOrderRuleEntry::setCompanyId);
		attributeGetterFunctions.put(
			"userId", CommerceOrderRuleEntry::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<CommerceOrderRuleEntry, Long>)
				CommerceOrderRuleEntry::setUserId);
		attributeGetterFunctions.put(
			"userName", CommerceOrderRuleEntry::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<CommerceOrderRuleEntry, String>)
				CommerceOrderRuleEntry::setUserName);
		attributeGetterFunctions.put(
			"createDate", CommerceOrderRuleEntry::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<CommerceOrderRuleEntry, Date>)
				CommerceOrderRuleEntry::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", CommerceOrderRuleEntry::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<CommerceOrderRuleEntry, Date>)
				CommerceOrderRuleEntry::setModifiedDate);
		attributeGetterFunctions.put(
			"active", CommerceOrderRuleEntry::getActive);
		attributeSetterBiConsumers.put(
			"active",
			(BiConsumer<CommerceOrderRuleEntry, Boolean>)
				CommerceOrderRuleEntry::setActive);
		attributeGetterFunctions.put(
			"description", CommerceOrderRuleEntry::getDescription);
		attributeSetterBiConsumers.put(
			"description",
			(BiConsumer<CommerceOrderRuleEntry, String>)
				CommerceOrderRuleEntry::setDescription);
		attributeGetterFunctions.put(
			"displayDate", CommerceOrderRuleEntry::getDisplayDate);
		attributeSetterBiConsumers.put(
			"displayDate",
			(BiConsumer<CommerceOrderRuleEntry, Date>)
				CommerceOrderRuleEntry::setDisplayDate);
		attributeGetterFunctions.put(
			"expirationDate", CommerceOrderRuleEntry::getExpirationDate);
		attributeSetterBiConsumers.put(
			"expirationDate",
			(BiConsumer<CommerceOrderRuleEntry, Date>)
				CommerceOrderRuleEntry::setExpirationDate);
		attributeGetterFunctions.put("name", CommerceOrderRuleEntry::getName);
		attributeSetterBiConsumers.put(
			"name",
			(BiConsumer<CommerceOrderRuleEntry, String>)
				CommerceOrderRuleEntry::setName);
		attributeGetterFunctions.put(
			"priority", CommerceOrderRuleEntry::getPriority);
		attributeSetterBiConsumers.put(
			"priority",
			(BiConsumer<CommerceOrderRuleEntry, Integer>)
				CommerceOrderRuleEntry::setPriority);
		attributeGetterFunctions.put("type", CommerceOrderRuleEntry::getType);
		attributeSetterBiConsumers.put(
			"type",
			(BiConsumer<CommerceOrderRuleEntry, String>)
				CommerceOrderRuleEntry::setType);
		attributeGetterFunctions.put(
			"typeSettings", CommerceOrderRuleEntry::getTypeSettings);
		attributeSetterBiConsumers.put(
			"typeSettings",
			(BiConsumer<CommerceOrderRuleEntry, String>)
				CommerceOrderRuleEntry::setTypeSettings);
		attributeGetterFunctions.put(
			"lastPublishDate", CommerceOrderRuleEntry::getLastPublishDate);
		attributeSetterBiConsumers.put(
			"lastPublishDate",
			(BiConsumer<CommerceOrderRuleEntry, Date>)
				CommerceOrderRuleEntry::setLastPublishDate);
		attributeGetterFunctions.put(
			"status", CommerceOrderRuleEntry::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<CommerceOrderRuleEntry, Integer>)
				CommerceOrderRuleEntry::setStatus);
		attributeGetterFunctions.put(
			"statusByUserId", CommerceOrderRuleEntry::getStatusByUserId);
		attributeSetterBiConsumers.put(
			"statusByUserId",
			(BiConsumer<CommerceOrderRuleEntry, Long>)
				CommerceOrderRuleEntry::setStatusByUserId);
		attributeGetterFunctions.put(
			"statusByUserName", CommerceOrderRuleEntry::getStatusByUserName);
		attributeSetterBiConsumers.put(
			"statusByUserName",
			(BiConsumer<CommerceOrderRuleEntry, String>)
				CommerceOrderRuleEntry::setStatusByUserName);
		attributeGetterFunctions.put(
			"statusDate", CommerceOrderRuleEntry::getStatusDate);
		attributeSetterBiConsumers.put(
			"statusDate",
			(BiConsumer<CommerceOrderRuleEntry, Date>)
				CommerceOrderRuleEntry::setStatusDate);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getExternalReferenceCode() {
		if (_externalReferenceCode == null) {
			return "";
		}
		else {
			return _externalReferenceCode;
		}
	}

	@Override
	public void setExternalReferenceCode(String externalReferenceCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_externalReferenceCode = externalReferenceCode;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalExternalReferenceCode() {
		return getColumnOriginalValue("externalReferenceCode");
	}

	@JSON
	@Override
	public long getCommerceOrderRuleEntryId() {
		return _commerceOrderRuleEntryId;
	}

	@Override
	public void setCommerceOrderRuleEntryId(long commerceOrderRuleEntryId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_commerceOrderRuleEntryId = commerceOrderRuleEntryId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public boolean getActive() {
		return _active;
	}

	@JSON
	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_active = active;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalActive() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("active_"));
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@JSON
	@Override
	public Date getDisplayDate() {
		return _displayDate;
	}

	@Override
	public void setDisplayDate(Date displayDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_displayDate = displayDate;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public Date getOriginalDisplayDate() {
		return getColumnOriginalValue("displayDate");
	}

	@JSON
	@Override
	public Date getExpirationDate() {
		return _expirationDate;
	}

	@Override
	public void setExpirationDate(Date expirationDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_expirationDate = expirationDate;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public Date getOriginalExpirationDate() {
		return getColumnOriginalValue("expirationDate");
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_name = name;
	}

	@JSON
	@Override
	public int getPriority() {
		return _priority;
	}

	@Override
	public void setPriority(int priority) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_priority = priority;
	}

	@JSON
	@Override
	public String getType() {
		if (_type == null) {
			return "";
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_type = type;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalType() {
		return getColumnOriginalValue("type_");
	}

	@JSON
	@Override
	public String getTypeSettings() {
		if (_typeSettings == null) {
			return "";
		}
		else {
			return _typeSettings;
		}
	}

	@Override
	public void setTypeSettings(String typeSettings) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_typeSettings = typeSettings;
	}

	@JSON
	@Override
	public Date getLastPublishDate() {
		return _lastPublishDate;
	}

	@Override
	public void setLastPublishDate(Date lastPublishDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lastPublishDate = lastPublishDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalStatus() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("status"));
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusDate = statusDate;
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), CommerceOrderRuleEntry.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CommerceOrderRuleEntry toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, CommerceOrderRuleEntry>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CommerceOrderRuleEntryImpl commerceOrderRuleEntryImpl =
			new CommerceOrderRuleEntryImpl();

		commerceOrderRuleEntryImpl.setExternalReferenceCode(
			getExternalReferenceCode());
		commerceOrderRuleEntryImpl.setCommerceOrderRuleEntryId(
			getCommerceOrderRuleEntryId());
		commerceOrderRuleEntryImpl.setCompanyId(getCompanyId());
		commerceOrderRuleEntryImpl.setUserId(getUserId());
		commerceOrderRuleEntryImpl.setUserName(getUserName());
		commerceOrderRuleEntryImpl.setCreateDate(getCreateDate());
		commerceOrderRuleEntryImpl.setModifiedDate(getModifiedDate());
		commerceOrderRuleEntryImpl.setActive(isActive());
		commerceOrderRuleEntryImpl.setDescription(getDescription());
		commerceOrderRuleEntryImpl.setDisplayDate(getDisplayDate());
		commerceOrderRuleEntryImpl.setExpirationDate(getExpirationDate());
		commerceOrderRuleEntryImpl.setName(getName());
		commerceOrderRuleEntryImpl.setPriority(getPriority());
		commerceOrderRuleEntryImpl.setType(getType());
		commerceOrderRuleEntryImpl.setTypeSettings(getTypeSettings());
		commerceOrderRuleEntryImpl.setLastPublishDate(getLastPublishDate());
		commerceOrderRuleEntryImpl.setStatus(getStatus());
		commerceOrderRuleEntryImpl.setStatusByUserId(getStatusByUserId());
		commerceOrderRuleEntryImpl.setStatusByUserName(getStatusByUserName());
		commerceOrderRuleEntryImpl.setStatusDate(getStatusDate());

		commerceOrderRuleEntryImpl.resetOriginalValues();

		return commerceOrderRuleEntryImpl;
	}

	@Override
	public CommerceOrderRuleEntry cloneWithOriginalValues() {
		CommerceOrderRuleEntryImpl commerceOrderRuleEntryImpl =
			new CommerceOrderRuleEntryImpl();

		commerceOrderRuleEntryImpl.setExternalReferenceCode(
			this.<String>getColumnOriginalValue("externalReferenceCode"));
		commerceOrderRuleEntryImpl.setCommerceOrderRuleEntryId(
			this.<Long>getColumnOriginalValue("commerceOrderRuleEntryId"));
		commerceOrderRuleEntryImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		commerceOrderRuleEntryImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		commerceOrderRuleEntryImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		commerceOrderRuleEntryImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		commerceOrderRuleEntryImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		commerceOrderRuleEntryImpl.setActive(
			this.<Boolean>getColumnOriginalValue("active_"));
		commerceOrderRuleEntryImpl.setDescription(
			this.<String>getColumnOriginalValue("description"));
		commerceOrderRuleEntryImpl.setDisplayDate(
			this.<Date>getColumnOriginalValue("displayDate"));
		commerceOrderRuleEntryImpl.setExpirationDate(
			this.<Date>getColumnOriginalValue("expirationDate"));
		commerceOrderRuleEntryImpl.setName(
			this.<String>getColumnOriginalValue("name"));
		commerceOrderRuleEntryImpl.setPriority(
			this.<Integer>getColumnOriginalValue("priority"));
		commerceOrderRuleEntryImpl.setType(
			this.<String>getColumnOriginalValue("type_"));
		commerceOrderRuleEntryImpl.setTypeSettings(
			this.<String>getColumnOriginalValue("typeSettings"));
		commerceOrderRuleEntryImpl.setLastPublishDate(
			this.<Date>getColumnOriginalValue("lastPublishDate"));
		commerceOrderRuleEntryImpl.setStatus(
			this.<Integer>getColumnOriginalValue("status"));
		commerceOrderRuleEntryImpl.setStatusByUserId(
			this.<Long>getColumnOriginalValue("statusByUserId"));
		commerceOrderRuleEntryImpl.setStatusByUserName(
			this.<String>getColumnOriginalValue("statusByUserName"));
		commerceOrderRuleEntryImpl.setStatusDate(
			this.<Date>getColumnOriginalValue("statusDate"));

		return commerceOrderRuleEntryImpl;
	}

	@Override
	public int compareTo(CommerceOrderRuleEntry commerceOrderRuleEntry) {
		int value = 0;

		if (getPriority() < commerceOrderRuleEntry.getPriority()) {
			value = -1;
		}
		else if (getPriority() > commerceOrderRuleEntry.getPriority()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof CommerceOrderRuleEntry)) {
			return false;
		}

		CommerceOrderRuleEntry commerceOrderRuleEntry =
			(CommerceOrderRuleEntry)object;

		long primaryKey = commerceOrderRuleEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<CommerceOrderRuleEntry> toCacheModel() {
		CommerceOrderRuleEntryCacheModel commerceOrderRuleEntryCacheModel =
			new CommerceOrderRuleEntryCacheModel();

		commerceOrderRuleEntryCacheModel.externalReferenceCode =
			getExternalReferenceCode();

		String externalReferenceCode =
			commerceOrderRuleEntryCacheModel.externalReferenceCode;

		if ((externalReferenceCode != null) &&
			(externalReferenceCode.length() == 0)) {

			commerceOrderRuleEntryCacheModel.externalReferenceCode = null;
		}

		commerceOrderRuleEntryCacheModel.commerceOrderRuleEntryId =
			getCommerceOrderRuleEntryId();

		commerceOrderRuleEntryCacheModel.companyId = getCompanyId();

		commerceOrderRuleEntryCacheModel.userId = getUserId();

		commerceOrderRuleEntryCacheModel.userName = getUserName();

		String userName = commerceOrderRuleEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			commerceOrderRuleEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			commerceOrderRuleEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			commerceOrderRuleEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			commerceOrderRuleEntryCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			commerceOrderRuleEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		commerceOrderRuleEntryCacheModel.active = isActive();

		commerceOrderRuleEntryCacheModel.description = getDescription();

		String description = commerceOrderRuleEntryCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			commerceOrderRuleEntryCacheModel.description = null;
		}

		Date displayDate = getDisplayDate();

		if (displayDate != null) {
			commerceOrderRuleEntryCacheModel.displayDate =
				displayDate.getTime();
		}
		else {
			commerceOrderRuleEntryCacheModel.displayDate = Long.MIN_VALUE;
		}

		Date expirationDate = getExpirationDate();

		if (expirationDate != null) {
			commerceOrderRuleEntryCacheModel.expirationDate =
				expirationDate.getTime();
		}
		else {
			commerceOrderRuleEntryCacheModel.expirationDate = Long.MIN_VALUE;
		}

		commerceOrderRuleEntryCacheModel.name = getName();

		String name = commerceOrderRuleEntryCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			commerceOrderRuleEntryCacheModel.name = null;
		}

		commerceOrderRuleEntryCacheModel.priority = getPriority();

		commerceOrderRuleEntryCacheModel.type = getType();

		String type = commerceOrderRuleEntryCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			commerceOrderRuleEntryCacheModel.type = null;
		}

		commerceOrderRuleEntryCacheModel.typeSettings = getTypeSettings();

		String typeSettings = commerceOrderRuleEntryCacheModel.typeSettings;

		if ((typeSettings != null) && (typeSettings.length() == 0)) {
			commerceOrderRuleEntryCacheModel.typeSettings = null;
		}

		Date lastPublishDate = getLastPublishDate();

		if (lastPublishDate != null) {
			commerceOrderRuleEntryCacheModel.lastPublishDate =
				lastPublishDate.getTime();
		}
		else {
			commerceOrderRuleEntryCacheModel.lastPublishDate = Long.MIN_VALUE;
		}

		commerceOrderRuleEntryCacheModel.status = getStatus();

		commerceOrderRuleEntryCacheModel.statusByUserId = getStatusByUserId();

		commerceOrderRuleEntryCacheModel.statusByUserName =
			getStatusByUserName();

		String statusByUserName =
			commerceOrderRuleEntryCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			commerceOrderRuleEntryCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			commerceOrderRuleEntryCacheModel.statusDate = statusDate.getTime();
		}
		else {
			commerceOrderRuleEntryCacheModel.statusDate = Long.MIN_VALUE;
		}

		return commerceOrderRuleEntryCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<CommerceOrderRuleEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<CommerceOrderRuleEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceOrderRuleEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(CommerceOrderRuleEntry)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<CommerceOrderRuleEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<CommerceOrderRuleEntry, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<CommerceOrderRuleEntry, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply((CommerceOrderRuleEntry)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, CommerceOrderRuleEntry>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _externalReferenceCode;
	private long _commerceOrderRuleEntryId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private boolean _active;
	private String _description;
	private Date _displayDate;
	private Date _expirationDate;
	private String _name;
	private int _priority;
	private String _type;
	private String _typeSettings;
	private Date _lastPublishDate;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<CommerceOrderRuleEntry, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((CommerceOrderRuleEntry)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put(
			"externalReferenceCode", _externalReferenceCode);
		_columnOriginalValues.put(
			"commerceOrderRuleEntryId", _commerceOrderRuleEntryId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("active_", _active);
		_columnOriginalValues.put("description", _description);
		_columnOriginalValues.put("displayDate", _displayDate);
		_columnOriginalValues.put("expirationDate", _expirationDate);
		_columnOriginalValues.put("name", _name);
		_columnOriginalValues.put("priority", _priority);
		_columnOriginalValues.put("type_", _type);
		_columnOriginalValues.put("typeSettings", _typeSettings);
		_columnOriginalValues.put("lastPublishDate", _lastPublishDate);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("statusByUserId", _statusByUserId);
		_columnOriginalValues.put("statusByUserName", _statusByUserName);
		_columnOriginalValues.put("statusDate", _statusDate);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("active_", "active");
		attributeNames.put("type_", "type");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("externalReferenceCode", 1L);

		columnBitmasks.put("commerceOrderRuleEntryId", 2L);

		columnBitmasks.put("companyId", 4L);

		columnBitmasks.put("userId", 8L);

		columnBitmasks.put("userName", 16L);

		columnBitmasks.put("createDate", 32L);

		columnBitmasks.put("modifiedDate", 64L);

		columnBitmasks.put("active_", 128L);

		columnBitmasks.put("description", 256L);

		columnBitmasks.put("displayDate", 512L);

		columnBitmasks.put("expirationDate", 1024L);

		columnBitmasks.put("name", 2048L);

		columnBitmasks.put("priority", 4096L);

		columnBitmasks.put("type_", 8192L);

		columnBitmasks.put("typeSettings", 16384L);

		columnBitmasks.put("lastPublishDate", 32768L);

		columnBitmasks.put("status", 65536L);

		columnBitmasks.put("statusByUserId", 131072L);

		columnBitmasks.put("statusByUserName", 262144L);

		columnBitmasks.put("statusDate", 524288L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private CommerceOrderRuleEntry _escapedModel;

}